{"version":3,"sources":["components/Info/info.module.sass","components/Info/info.jsx","components/Weather/Form/form.jsx","components/Weather/WeatherInfo/weatherInfo.jsx","components/Weather/weather.jsx","App.jsx","index.js"],"names":["module","exports","Info","className","style","mainInfo","Form","props","onSubmit","getWeather","type","name","placeholder","WeatherInfo","main","wind","sys","weather","visibility","useState","showingMore","setShowingMore","rain","snow","country","description","Math","round","temp","onClick","temp_min","temp_max","feels_like","speed","deg","pressure","city","weatherStated","e","a","target","elements","value","fetch","json","tempParsed","cod","message","console","log","Weather","preventDefault","setWeather","ReactDOM","render","App","document","getElementById"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,SAAW,yB,0KCEhBC,EAAO,WAClB,OACE,yBAAKC,UAAWC,IAAMC,UACpB,2CACA,gG,8BCLOC,G,MAAO,SAACC,GAAD,OAClB,yBAAKJ,UAAU,QACb,0BAAMK,SAAUD,EAAME,YACpB,2BAAOC,KAAK,OAAOC,KAAK,OAAOC,YAAY,oBAC3C,2CCJOC,EAAc,SAACN,GAAW,IAAD,EAGhCI,EAAMG,EAAMC,EAAMC,EAAiBC,EAASC,EAHZ,EACEC,oBAAS,GADX,mBAC7BC,EAD6B,KAChBC,EADgB,KAMpC,OAFAd,EAAMU,UAAcN,GAApB,EAA+EJ,EAAMU,SAAjEN,KAAMG,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,KAAMC,EAAtC,EAAsCA,IAAtC,EAA2CM,KAA3C,EAAiDC,KAAMN,EAAvD,EAAuDA,QAASC,EAAhE,EAAgEA,YAG9D,6BACGX,EAAMU,QACL,yBAAKd,UAAU,iBACb,0CACcQ,EADd,KACsBK,EAAIQ,SAE1B,6BACGP,EAAQ,GAAGQ,YADd,KAC6BC,KAAKC,MAAMb,EAAKc,MAD7C,UAGA,wBACEzB,UAAU,WACV0B,QAAS,WACPR,GAAgBD,KAHpB,mBAOCA,EACC,yBAAKjB,UAAU,YACb,mCACA,6BACE,gDACA,kCAAQW,EAAKgB,SAAb,YAEF,+BACA,6BACE,gDACA,kCAAQhB,EAAKiB,SAAb,YAEF,6BACE,8CACA,kCAAQjB,EAAKkB,WAAb,YAEF,mCACA,6BACE,yCACA,8BAAOjB,EAAKkB,MAAZ,QAEF,6BACE,6CACA,8BAAOlB,EAAKmB,IAAZ,YAEF,oCACA,6BACE,4CACA,8BAAOpB,EAAKqB,SAAZ,SAEF,6BACE,8CACA,8BAAOjB,EAAP,OAIJ,IAIJ,KC3DJkB,EAAO,KACPC,EAAgB,KAGd5B,EAAU,uCAAG,WAAO6B,GAAP,iBAAAC,EAAA,2DACjBH,EAAOE,EAAEE,OAAOC,SAASL,KAAKM,OADb,iCAGEC,MAAM,oDAAD,OACgCP,EADhC,+BALV,qCAEG,cAGXR,EAHW,gBAMQA,EAAKgB,OANb,OAMXC,EANW,OAOUR,EAAP,KAAlBQ,EAAWC,IAA8BD,EAAWE,QAA4BF,EAChFG,QAAQC,IAAI,oBAAqBZ,GARlB,4CAAH,sDAgBHa,EAAU,WAAM,4CAC3B,WAAwBZ,GAAxB,SAAAC,EAAA,6DACED,EAAEa,iBADJ,SAEQ1C,EAAW6B,GAFnB,OAGEc,EAAWf,GAHb,4CAD2B,4BAOClB,mBAASkB,GAPV,mBAOtBpB,EAPsB,KAObmC,EAPa,KAQ3B,OACE,6BACE,kBAAC,EAAD,CAAM3C,WAVkB,SAAD,qCAWvB,kBAAC,EAAD,CAAaQ,QAASA,MC/Bb,oBACb,yBAAKd,UAAU,QACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCLJkD,IAASC,OAAO,kBAACC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7c0cf3b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainInfo\":\"info_mainInfo__1dcHt\"};","import React from 'react';\r\nimport style from './info.module.sass';\r\n\r\nexport const Info = () => {\r\n  return (\r\n    <div className={style.mainInfo}>\r\n      <h1>Weather app</h1>\r\n      <h3>Find out the weather find out the weather find out the weather</h3>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const Form = (props) => (\r\n  <div className=\"form\">\r\n    <form onSubmit={props.getWeather}>\r\n      <input type=\"text\" name=\"city\" placeholder=\"Input your city\" />\r\n      <button>Get</button>\r\n    </form>\r\n  </div>\r\n);\r\n","import React, { useState } from 'react';\r\n\r\nexport const WeatherInfo = (props) => {\r\n  const [showingMore, setShowingMore] = useState(false);\r\n\r\n  let name, main, wind, sys, rain, snow, weather, visibility;\r\n  props.weather && ({ name, main, wind, sys, rain, snow, weather, visibility } = props.weather);\r\n\r\n  return (\r\n    <div>\r\n      {props.weather ? (\r\n        <div className=\"currentWether\">\r\n          <h3>\r\n            Weather in {name}, {sys.country}\r\n          </h3>\r\n          <div>\r\n            {weather[0].description}, {Math.round(main.temp)}℃\r\n          </div>\r\n          <h6\r\n            className=\"showMore\"\r\n            onClick={() => {\r\n              setShowingMore(!showingMore);\r\n            }}>\r\n            show more⬎\r\n          </h6>\r\n          {showingMore ? (\r\n            <div className=\"moreInfo\">\r\n              <p>temp</p>\r\n              <div>\r\n                <span>Minimum temp: </span>\r\n                <span> {main.temp_min} ℃</span>\r\n              </div>\r\n              <span></span>\r\n              <div>\r\n                <span>Maximum temp: </span>\r\n                <span> {main.temp_max} ℃</span>\r\n              </div>\r\n              <div>\r\n                <span>Feels like: </span>\r\n                <span> {main.feels_like} ℃</span>\r\n              </div>\r\n              <p>wind</p>\r\n              <div>\r\n                <span>Speed: </span>\r\n                <span>{wind.speed}m/s</span>\r\n              </div>\r\n              <div>\r\n                <span>Direction: </span>\r\n                <span>{wind.deg} degree</span>\r\n              </div>\r\n              <p>other</p>\r\n              <div>\r\n                <span>pressure: </span>\r\n                <span>{main.pressure} hPa</span>\r\n              </div>\r\n              <div>\r\n                <span>Visibility: </span>\r\n                <span>{visibility}m</span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </div>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport './weather.sass';\r\n\r\nimport { Form } from './Form/form';\r\nimport { WeatherInfo } from './WeatherInfo/weatherInfo';\r\n\r\nlet city = null;\r\nlet weatherStated = null;\r\nconst API_KEY = 'bc1fde7ac9dc3752c2d8a62e589617e3';\r\n\r\nconst getWeather = async (e) => {\r\n  city = e.target.elements.city.value;\r\n  if (city) {\r\n    let temp = await fetch(\r\n      `http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`,\r\n    );\r\n    let tempParsed = await temp.json();\r\n    tempParsed.cod == 404 ? (weatherStated = tempParsed.message) : (weatherStated = tempParsed);\r\n    console.log('i got new weather', weatherStated);\r\n  }\r\n};\r\n\r\nconst ert = () => {\r\n  console.log(weatherStated);\r\n};\r\n\r\nexport const Weather = () => {\r\n  async function forceUpd(e) {\r\n    e.preventDefault();\r\n    await getWeather(e);\r\n    setWeather(weatherStated);\r\n  }\r\n\r\n  let [weather, setWeather] = useState(weatherStated);\r\n  return (\r\n    <div>\r\n      <Form getWeather={forceUpd} />\r\n      <WeatherInfo weather={weather} />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport './app.sass';\n\nimport { Info } from './components/Info/info';\nimport { Weather } from './components/Weather/weather';\n\nexport default () => (\n  <div className=\"main\">\n    <Info />\n    <Weather />\n  </div>\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}